# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import sorl.thumbnail.fields
import django.utils.timezone
from django.conf import settings
import common.functions


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=50, verbose_name='Name of cash register')),
                ('receipt_format', models.CharField(max_length=32, verbose_name='Receipt format', choices=[(b'Page', 'Full page (Letter/A4)'), (b'Thermal', 'Thermal (80mm)')])),
                ('receipt_type', models.CharField(max_length=32, verbose_name='Receipt type', choices=[(b'Print', 'Printed'), (b'E-mail', 'E-mail')])),
                ('print_logo', models.BooleanField(default=True, verbose_name='Print logo on thermal receipts')),
                ('location', models.TextField(max_length=120, null=True, verbose_name='Location of this register', blank=True)),
                ('print_location', models.BooleanField(default=True, verbose_name='Print location of register')),
                ('user_id', models.IntegerField()),
                ('user_name', models.CharField(max_length=64)),
                ('serial', models.IntegerField(null=True, verbose_name="Bill number, unique over all company's bills")),
                ('discount_amount', models.DecimalField(null=True, verbose_name='Discount on the whole bill (absolute or percent)', max_digits=24, decimal_places=8, blank=True)),
                ('discount_type', models.CharField(blank=True, max_length=16, null=True, verbose_name='Type of discount', choices=[(b'Relative', 'Percentage'), (b'Absolute', 'Absolute value')])),
                ('base', models.DecimalField(null=True, verbose_name='Sub total', max_digits=24, decimal_places=8, blank=True)),
                ('discount', models.DecimalField(null=True, verbose_name='Discount, sum of all discounts', max_digits=24, decimal_places=8, blank=True)),
                ('tax', models.DecimalField(null=True, verbose_name="Tax amount, absolute value, sum of all items' taxes", max_digits=24, decimal_places=8, blank=True)),
                ('total', models.DecimalField(null=True, verbose_name='Total amount to be paid', max_digits=24, decimal_places=8, blank=True)),
                ('notes', models.CharField(max_length=1000, null=True, verbose_name='Notes', blank=True)),
                ('payment_type', models.CharField(blank=True, max_length=32, null=True, verbose_name='Payment type', choices=[(b'cash', 'Cash'), (b'credit-card', 'Credit card'), (b'bitcoin', 'Bitcoin')])),
                ('payment_reference', models.TextField(null=True, verbose_name='Payment reference', blank=True)),
                ('timestamp', models.DateTimeField(verbose_name='Date and time of bill creation')),
                ('status', models.CharField(default=b'Unpaid', max_length=20, verbose_name='Bill status', choices=[(b'Unpaid', 'Awaiting payment'), (b'Paid', 'Paid'), (b'Canceled', 'Canceled')])),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillCompany',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=200, verbose_name='Company name')),
                ('street', models.CharField(max_length=200, null=True, verbose_name='Street and house number', blank=True)),
                ('postcode', models.CharField(max_length=20, null=True, verbose_name='Postal code', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name='City', blank=True)),
                ('state', models.CharField(max_length=50, null=True, verbose_name='State', blank=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AF', b'Afghanistan'), (b'AX', b'\xc3\x85land Islands'), (b'AL', b'Albania'), (b'DZ', b'Algeria'), (b'AS', b'American Samoa'), (b'AD', b'Andorra'), (b'AO', b'Angola'), (b'AI', b'Anguilla'), (b'AQ', b'Antarctica'), (b'AG', b'Antigua and Barbuda'), (b'AR', b'Argentina'), (b'AM', b'Armenia'), (b'AW', b'Aruba'), (b'AU', b'Australia'), (b'AT', b'Austria'), (b'AZ', b'Azerbaijan'), (b'BS', b'Bahamas'), (b'BH', b'Bahrain'), (b'BD', b'Bangladesh'), (b'BB', b'Barbados'), (b'BY', b'Belarus'), (b'BE', b'Belgium'), (b'BZ', b'Belize'), (b'BJ', b'Benin'), (b'BM', b'Bermuda'), (b'BT', b'Bhutan'), (b'BO', b'Bolivia, Plurinational State of'), (b'BQ', b'Bonaire, Sint Eustatius and Saba'), (b'BA', b'Bosnia and Herzegovina'), (b'BW', b'Botswana'), (b'BV', b'Bouvet Island'), (b'BR', b'Brazil'), (b'IO', b'British Indian Ocean Territory'), (b'BN', b'Brunei Darussalam'), (b'BG', b'Bulgaria'), (b'BF', b'Burkina Faso'), (b'BI', b'Burundi'), (b'KH', b'Cambodia'), (b'CM', b'Cameroon'), (b'CA', b'Canada'), (b'CV', b'Cape Verde'), (b'KY', b'Cayman Islands'), (b'CF', b'Central African Republic'), (b'TD', b'Chad'), (b'CL', b'Chile'), (b'CN', b'China'), (b'CX', b'Christmas Island'), (b'CC', b'Cocos (Keeling) Islands'), (b'CO', b'Colombia'), (b'KM', b'Comoros'), (b'CG', b'Congo'), (b'CD', b'Congo, the Democratic Republic of the'), (b'CK', b'Cook Islands'), (b'CR', b'Costa Rica'), (b'CI', b"C\xc3\xb4te d'Ivoire"), (b'HR', b'Croatia'), (b'CU', b'Cuba'), (b'CW', b'Cura\xc3\xa7ao'), (b'CY', b'Cyprus'), (b'CZ', b'Czech Republic'), (b'DK', b'Denmark'), (b'DJ', b'Djibouti'), (b'DM', b'Dominica'), (b'DO', b'Dominican Republic'), (b'EC', b'Ecuador'), (b'EG', b'Egypt'), (b'SV', b'El Salvador'), (b'GQ', b'Equatorial Guinea'), (b'ER', b'Eritrea'), (b'EE', b'Estonia'), (b'ET', b'Ethiopia'), (b'FK', b'Falkland Islands (Malvinas)'), (b'FO', b'Faroe Islands'), (b'FJ', b'Fiji'), (b'FI', b'Finland'), (b'FR', b'France'), (b'GF', b'French Guiana'), (b'PF', b'French Polynesia'), (b'TF', b'French Southern Territories'), (b'GA', b'Gabon'), (b'GM', b'Gambia'), (b'GE', b'Georgia'), (b'DE', b'Germany'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GR', b'Greece'), (b'GL', b'Greenland'), (b'GD', b'Grenada'), (b'GP', b'Guadeloupe'), (b'GU', b'Guam'), (b'GT', b'Guatemala'), (b'GG', b'Guernsey'), (b'GN', b'Guinea'), (b'GW', b'Guinea-Bissau'), (b'GY', b'Guyana'), (b'HT', b'Haiti'), (b'HM', b'Heard Island and McDonald Islands'), (b'VA', b'Holy See (Vatican City State)'), (b'HN', b'Honduras'), (b'HK', b'Hong Kong'), (b'HU', b'Hungary'), (b'IS', b'Iceland'), (b'IN', b'India'), (b'ID', b'Indonesia'), (b'IR', b'Iran, Islamic Republic of'), (b'IQ', b'Iraq'), (b'IE', b'Ireland'), (b'IM', b'Isle of Man'), (b'IL', b'Israel'), (b'IT', b'Italy'), (b'JM', b'Jamaica'), (b'JP', b'Japan'), (b'JE', b'Jersey'), (b'JO', b'Jordan'), (b'KZ', b'Kazakhstan'), (b'KE', b'Kenya'), (b'KI', b'Kiribati'), (b'KP', b"Korea, Democratic People's Republic of"), (b'KR', b'Korea, Republic of'), (b'KW', b'Kuwait'), (b'KG', b'Kyrgyzstan'), (b'LA', b"Lao People's Democratic Republic"), (b'LV', b'Latvia'), (b'LB', b'Lebanon'), (b'LS', b'Lesotho'), (b'LR', b'Liberia'), (b'LY', b'Libya'), (b'LI', b'Liechtenstein'), (b'LT', b'Lithuania'), (b'LU', b'Luxembourg'), (b'MO', b'Macao'), (b'MK', b'Macedonia, The Former Yugoslav Republic of'), (b'MG', b'Madagascar'), (b'MW', b'Malawi'), (b'MY', b'Malaysia'), (b'MV', b'Maldives'), (b'ML', b'Mali'), (b'MT', b'Malta'), (b'MH', b'Marshall Islands'), (b'MQ', b'Martinique'), (b'MR', b'Mauritania'), (b'MU', b'Mauritius'), (b'YT', b'Mayotte'), (b'MX', b'Mexico'), (b'FM', b'Micronesia, Federated States of'), (b'MD', b'Moldova, Republic of'), (b'MC', b'Monaco'), (b'MN', b'Mongolia'), (b'ME', b'Montenegro'), (b'MS', b'Montserrat'), (b'MA', b'Morocco'), (b'MZ', b'Mozambique'), (b'MM', b'Myanmar'), (b'NA', b'Namibia'), (b'NR', b'Nauru'), (b'NP', b'Nepal'), (b'NL', b'Netherlands'), (b'NC', b'New Caledonia'), (b'NZ', b'New Zealand'), (b'NI', b'Nicaragua'), (b'NE', b'Niger'), (b'NG', b'Nigeria'), (b'NU', b'Niue'), (b'NF', b'Norfolk Island'), (b'MP', b'Northern Mariana Islands'), (b'NO', b'Norway'), (b'OM', b'Oman'), (b'PK', b'Pakistan'), (b'PW', b'Palau'), (b'PS', b'Palestine, State of'), (b'PA', b'Panama'), (b'PG', b'Papua New Guinea'), (b'PY', b'Paraguay'), (b'PE', b'Peru'), (b'PH', b'Philippines'), (b'PN', b'Pitcairn'), (b'PL', b'Poland'), (b'PT', b'Portugal'), (b'PR', b'Puerto Rico'), (b'QA', b'Qatar'), (b'RE', b'R\xc3\xa9union'), (b'RO', b'Romania'), (b'RU', b'Russian Federation'), (b'RW', b'Rwanda'), (b'BL', b'Saint Barth\xc3\xa9lemy'), (b'SH', b'Saint Helena, Ascension and Tristan da Cunha'), (b'KN', b'Saint Kitts and Nevis'), (b'LC', b'Saint Lucia'), (b'MF', b'Saint Martin (French part)'), (b'PM', b'Saint Pierre and Miquelon'), (b'VC', b'Saint Vincent and the Grenadines'), (b'WS', b'Samoa'), (b'SM', b'San Marino'), (b'ST', b'Sao Tome and Principe'), (b'SA', b'Saudi Arabia'), (b'SN', b'Senegal'), (b'RS', b'Serbia'), (b'SC', b'Seychelles'), (b'SL', b'Sierra Leone'), (b'SG', b'Singapore'), (b'SX', b'Sint Maarten (Dutch part)'), (b'SK', b'Slovakia'), (b'SI', b'Slovenia'), (b'SB', b'Solomon Islands'), (b'SO', b'Somalia'), (b'ZA', b'South Africa'), (b'GS', b'South Georgia and the South Sandwich Islands'), (b'SS', b'South Sudan'), (b'ES', b'Spain'), (b'LK', b'Sri Lanka'), (b'SD', b'Sudan'), (b'SR', b'Suriname'), (b'SJ', b'Svalbard and Jan Mayen'), (b'SZ', b'Swaziland'), (b'SE', b'Sweden'), (b'CH', b'Switzerland'), (b'SY', b'Syrian Arab Republic'), (b'TW', b'Taiwan, Province of China'), (b'TJ', b'Tajikistan'), (b'TZ', b'Tanzania, United Republic of'), (b'TH', b'Thailand'), (b'TL', b'Timor-Leste'), (b'TG', b'Togo'), (b'TK', b'Tokelau'), (b'TO', b'Tonga'), (b'TT', b'Trinidad and Tobago'), (b'TN', b'Tunisia'), (b'TR', b'Turkey'), (b'TM', b'Turkmenistan'), (b'TC', b'Turks and Caicos Islands'), (b'TV', b'Tuvalu'), (b'UG', b'Uganda'), (b'UA', b'Ukraine'), (b'AE', b'United Arab Emirates'), (b'GB', b'United Kingdom'), (b'US', b'United States'), (b'UM', b'United States Minor Outlying Islands'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekistan'), (b'VU', b'Vanuatu'), (b'VE', b'Venezuela, Bolivarian Republic of'), (b'VN', b'Viet Nam'), (b'VG', b'Virgin Islands, British'), (b'VI', b'Virgin Islands, U.S.'), (b'WF', b'Wallis and Futuna'), (b'EH', b'Western Sahara'), (b'YE', b'Yemen'), (b'ZM', b'Zambia'), (b'ZW', b'Zimbabwe')])),
                ('email', models.CharField(max_length=256, verbose_name='E-mail address')),
                ('website', models.CharField(max_length=256, null=True, verbose_name='Website', blank=True)),
                ('phone', models.CharField(max_length=30, null=True, verbose_name='Phone number', blank=True)),
                ('vat_no', models.CharField(max_length=30, verbose_name='VAT exemption number')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillContact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('type', models.CharField(default=b'Individual', max_length=20, verbose_name='Type of contact', choices=[(b'Individual', 'Individual'), (b'Company', 'Company'), (b'None', 'None')])),
                ('company_name', models.CharField(max_length=50, null=True, verbose_name='Company name', blank=True)),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First name', blank=True)),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last name', blank=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True, choices=[(b'M', 'Male'), (b'F', 'Female'), (b'U', 'Undisclosed')])),
                ('date_of_birth', models.DateField(null=True, verbose_name='Date of birth', blank=True)),
                ('street_address', models.CharField(max_length=200, null=True, verbose_name='Street and house number', blank=True)),
                ('postcode', models.CharField(max_length=12, null=True, verbose_name='Post code/ZIP', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name='City', blank=True)),
                ('state', models.CharField(max_length=50, null=True, verbose_name='State', blank=True)),
                ('country', models.CharField(max_length=2, choices=[(b'AF', b'Afghanistan'), (b'AX', b'\xc3\x85land Islands'), (b'AL', b'Albania'), (b'DZ', b'Algeria'), (b'AS', b'American Samoa'), (b'AD', b'Andorra'), (b'AO', b'Angola'), (b'AI', b'Anguilla'), (b'AQ', b'Antarctica'), (b'AG', b'Antigua and Barbuda'), (b'AR', b'Argentina'), (b'AM', b'Armenia'), (b'AW', b'Aruba'), (b'AU', b'Australia'), (b'AT', b'Austria'), (b'AZ', b'Azerbaijan'), (b'BS', b'Bahamas'), (b'BH', b'Bahrain'), (b'BD', b'Bangladesh'), (b'BB', b'Barbados'), (b'BY', b'Belarus'), (b'BE', b'Belgium'), (b'BZ', b'Belize'), (b'BJ', b'Benin'), (b'BM', b'Bermuda'), (b'BT', b'Bhutan'), (b'BO', b'Bolivia, Plurinational State of'), (b'BQ', b'Bonaire, Sint Eustatius and Saba'), (b'BA', b'Bosnia and Herzegovina'), (b'BW', b'Botswana'), (b'BV', b'Bouvet Island'), (b'BR', b'Brazil'), (b'IO', b'British Indian Ocean Territory'), (b'BN', b'Brunei Darussalam'), (b'BG', b'Bulgaria'), (b'BF', b'Burkina Faso'), (b'BI', b'Burundi'), (b'KH', b'Cambodia'), (b'CM', b'Cameroon'), (b'CA', b'Canada'), (b'CV', b'Cape Verde'), (b'KY', b'Cayman Islands'), (b'CF', b'Central African Republic'), (b'TD', b'Chad'), (b'CL', b'Chile'), (b'CN', b'China'), (b'CX', b'Christmas Island'), (b'CC', b'Cocos (Keeling) Islands'), (b'CO', b'Colombia'), (b'KM', b'Comoros'), (b'CG', b'Congo'), (b'CD', b'Congo, the Democratic Republic of the'), (b'CK', b'Cook Islands'), (b'CR', b'Costa Rica'), (b'CI', b"C\xc3\xb4te d'Ivoire"), (b'HR', b'Croatia'), (b'CU', b'Cuba'), (b'CW', b'Cura\xc3\xa7ao'), (b'CY', b'Cyprus'), (b'CZ', b'Czech Republic'), (b'DK', b'Denmark'), (b'DJ', b'Djibouti'), (b'DM', b'Dominica'), (b'DO', b'Dominican Republic'), (b'EC', b'Ecuador'), (b'EG', b'Egypt'), (b'SV', b'El Salvador'), (b'GQ', b'Equatorial Guinea'), (b'ER', b'Eritrea'), (b'EE', b'Estonia'), (b'ET', b'Ethiopia'), (b'FK', b'Falkland Islands (Malvinas)'), (b'FO', b'Faroe Islands'), (b'FJ', b'Fiji'), (b'FI', b'Finland'), (b'FR', b'France'), (b'GF', b'French Guiana'), (b'PF', b'French Polynesia'), (b'TF', b'French Southern Territories'), (b'GA', b'Gabon'), (b'GM', b'Gambia'), (b'GE', b'Georgia'), (b'DE', b'Germany'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GR', b'Greece'), (b'GL', b'Greenland'), (b'GD', b'Grenada'), (b'GP', b'Guadeloupe'), (b'GU', b'Guam'), (b'GT', b'Guatemala'), (b'GG', b'Guernsey'), (b'GN', b'Guinea'), (b'GW', b'Guinea-Bissau'), (b'GY', b'Guyana'), (b'HT', b'Haiti'), (b'HM', b'Heard Island and McDonald Islands'), (b'VA', b'Holy See (Vatican City State)'), (b'HN', b'Honduras'), (b'HK', b'Hong Kong'), (b'HU', b'Hungary'), (b'IS', b'Iceland'), (b'IN', b'India'), (b'ID', b'Indonesia'), (b'IR', b'Iran, Islamic Republic of'), (b'IQ', b'Iraq'), (b'IE', b'Ireland'), (b'IM', b'Isle of Man'), (b'IL', b'Israel'), (b'IT', b'Italy'), (b'JM', b'Jamaica'), (b'JP', b'Japan'), (b'JE', b'Jersey'), (b'JO', b'Jordan'), (b'KZ', b'Kazakhstan'), (b'KE', b'Kenya'), (b'KI', b'Kiribati'), (b'KP', b"Korea, Democratic People's Republic of"), (b'KR', b'Korea, Republic of'), (b'KW', b'Kuwait'), (b'KG', b'Kyrgyzstan'), (b'LA', b"Lao People's Democratic Republic"), (b'LV', b'Latvia'), (b'LB', b'Lebanon'), (b'LS', b'Lesotho'), (b'LR', b'Liberia'), (b'LY', b'Libya'), (b'LI', b'Liechtenstein'), (b'LT', b'Lithuania'), (b'LU', b'Luxembourg'), (b'MO', b'Macao'), (b'MK', b'Macedonia, The Former Yugoslav Republic of'), (b'MG', b'Madagascar'), (b'MW', b'Malawi'), (b'MY', b'Malaysia'), (b'MV', b'Maldives'), (b'ML', b'Mali'), (b'MT', b'Malta'), (b'MH', b'Marshall Islands'), (b'MQ', b'Martinique'), (b'MR', b'Mauritania'), (b'MU', b'Mauritius'), (b'YT', b'Mayotte'), (b'MX', b'Mexico'), (b'FM', b'Micronesia, Federated States of'), (b'MD', b'Moldova, Republic of'), (b'MC', b'Monaco'), (b'MN', b'Mongolia'), (b'ME', b'Montenegro'), (b'MS', b'Montserrat'), (b'MA', b'Morocco'), (b'MZ', b'Mozambique'), (b'MM', b'Myanmar'), (b'NA', b'Namibia'), (b'NR', b'Nauru'), (b'NP', b'Nepal'), (b'NL', b'Netherlands'), (b'NC', b'New Caledonia'), (b'NZ', b'New Zealand'), (b'NI', b'Nicaragua'), (b'NE', b'Niger'), (b'NG', b'Nigeria'), (b'NU', b'Niue'), (b'NF', b'Norfolk Island'), (b'MP', b'Northern Mariana Islands'), (b'NO', b'Norway'), (b'OM', b'Oman'), (b'PK', b'Pakistan'), (b'PW', b'Palau'), (b'PS', b'Palestine, State of'), (b'PA', b'Panama'), (b'PG', b'Papua New Guinea'), (b'PY', b'Paraguay'), (b'PE', b'Peru'), (b'PH', b'Philippines'), (b'PN', b'Pitcairn'), (b'PL', b'Poland'), (b'PT', b'Portugal'), (b'PR', b'Puerto Rico'), (b'QA', b'Qatar'), (b'RE', b'R\xc3\xa9union'), (b'RO', b'Romania'), (b'RU', b'Russian Federation'), (b'RW', b'Rwanda'), (b'BL', b'Saint Barth\xc3\xa9lemy'), (b'SH', b'Saint Helena, Ascension and Tristan da Cunha'), (b'KN', b'Saint Kitts and Nevis'), (b'LC', b'Saint Lucia'), (b'MF', b'Saint Martin (French part)'), (b'PM', b'Saint Pierre and Miquelon'), (b'VC', b'Saint Vincent and the Grenadines'), (b'WS', b'Samoa'), (b'SM', b'San Marino'), (b'ST', b'Sao Tome and Principe'), (b'SA', b'Saudi Arabia'), (b'SN', b'Senegal'), (b'RS', b'Serbia'), (b'SC', b'Seychelles'), (b'SL', b'Sierra Leone'), (b'SG', b'Singapore'), (b'SX', b'Sint Maarten (Dutch part)'), (b'SK', b'Slovakia'), (b'SI', b'Slovenia'), (b'SB', b'Solomon Islands'), (b'SO', b'Somalia'), (b'ZA', b'South Africa'), (b'GS', b'South Georgia and the South Sandwich Islands'), (b'SS', b'South Sudan'), (b'ES', b'Spain'), (b'LK', b'Sri Lanka'), (b'SD', b'Sudan'), (b'SR', b'Suriname'), (b'SJ', b'Svalbard and Jan Mayen'), (b'SZ', b'Swaziland'), (b'SE', b'Sweden'), (b'CH', b'Switzerland'), (b'SY', b'Syrian Arab Republic'), (b'TW', b'Taiwan, Province of China'), (b'TJ', b'Tajikistan'), (b'TZ', b'Tanzania, United Republic of'), (b'TH', b'Thailand'), (b'TL', b'Timor-Leste'), (b'TG', b'Togo'), (b'TK', b'Tokelau'), (b'TO', b'Tonga'), (b'TT', b'Trinidad and Tobago'), (b'TN', b'Tunisia'), (b'TR', b'Turkey'), (b'TM', b'Turkmenistan'), (b'TC', b'Turks and Caicos Islands'), (b'TV', b'Tuvalu'), (b'UG', b'Uganda'), (b'UA', b'Ukraine'), (b'AE', b'United Arab Emirates'), (b'GB', b'United Kingdom'), (b'US', b'United States'), (b'UM', b'United States Minor Outlying Islands'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekistan'), (b'VU', b'Vanuatu'), (b'VE', b'Venezuela, Bolivarian Republic of'), (b'VN', b'Viet Nam'), (b'VG', b'Virgin Islands, British'), (b'VI', b'Virgin Islands, U.S.'), (b'WF', b'Wallis and Futuna'), (b'EH', b'Western Sahara'), (b'YE', b'Yemen'), (b'ZM', b'Zambia'), (b'ZW', b'Zimbabwe')])),
                ('email', models.CharField(max_length=255, null=True, verbose_name='E-mail address', blank=True)),
                ('phone', models.CharField(max_length=30, null=True, verbose_name='Telephone number', blank=True)),
                ('vat', models.CharField(max_length=30, null=True, verbose_name='VAT identification number', blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('code', models.CharField(max_length=30, verbose_name='Product code')),
                ('shortcut', models.CharField(max_length=5, null=True, verbose_name="Store's internal product number")),
                ('name', models.CharField(max_length=50, verbose_name='Product name')),
                ('description', models.TextField(null=True, verbose_name='Product description', blank=True)),
                ('private_notes', models.TextField(null=True, verbose_name='Notes (only for internal use)', blank=True)),
                ('unit_type', models.CharField(default=b'Piece', max_length=15, verbose_name='Product unit type', choices=[(b'Piece', 'Piece'), (b'g', b'g'), (b'dag', b'dag'), (b'kg', b'kg'), (b't', b'ton'), (b'oz', b'oz'), (b'lb', b'lb'), (b'cm', b'cm'), (b'm', b'm'), (b'in', b'in'), (b'ft', b'ft'), (b'yd', b'yd'), (b'in^2', b'in\xc2\xb2'), (b'm^2', b'm\xc2\xb2'), (b'ft^2', b'ft\xc2\xb2'), (b'l', b'l'), (b'dl', b'dl'), (b'cl', b'cl'), (b'm^3', b'm\xc2\xb3'), (b'fl. oz.', b'fl. oz.'), (b'pint', b'pint'), (b'gal', b'gal'), (b'ft^3', b'ft\xc2\xb3'), (b'h', 'Hour'), (b'other', 'Other')])),
                ('stock', models.DecimalField(verbose_name='Number of items left in stock', max_digits=24, decimal_places=8)),
                ('product_id', models.BigIntegerField()),
                ('bill_notes', models.CharField(help_text='Notes for this item, shown on bill (like expiration date or serial number)', max_length=1000, null=True, verbose_name='Bill notes', blank=True)),
                ('base', models.DecimalField(verbose_name='Base price (for single item), without tax and discounts', max_digits=24, decimal_places=8)),
                ('quantity', models.DecimalField(verbose_name='Quantity', max_digits=24, decimal_places=8)),
                ('tax_rate', models.DecimalField(null=True, verbose_name="Tax in percent, copied from product's tax rate", max_digits=11, decimal_places=8, blank=True)),
                ('batch', models.DecimalField(verbose_name='Base price, multiplied by quantity', max_digits=24, decimal_places=8)),
                ('discount', models.DecimalField(null=True, verbose_name='Discount, absolute value, sum of all valid discounts on this item', max_digits=24, decimal_places=8, blank=True)),
                ('net', models.DecimalField(verbose_name='Base price minus discounts', max_digits=24, decimal_places=8)),
                ('tax', models.DecimalField(verbose_name='Tax amount, absolute value', max_digits=24, decimal_places=8)),
                ('total', models.DecimalField(verbose_name='Total price, including taxes, discounts and multiplied by quantity', max_digits=24, decimal_places=8)),
                ('bill', models.ForeignKey(to='pos.Bill')),
                ('created_by', models.ForeignKey(related_name=b'pos_billitem_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_billitem_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillItemDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('description', models.TextField(null=True, verbose_name='Discount description', blank=True)),
                ('code', models.CharField(max_length=50, null=True, verbose_name='Code', blank=True)),
                ('type', models.CharField(default=b'Relative', max_length=30, verbose_name='Discount type', choices=[(b'Relative', 'Percentage'), (b'Absolute', 'Absolute value')])),
                ('amount', models.DecimalField(verbose_name='Amount', max_digits=24, decimal_places=8)),
                ('bill_item', models.ForeignKey(to='pos.BillItem')),
                ('created_by', models.ForeignKey(related_name=b'pos_billitemdiscount_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_billitemdiscount_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='BillRegister',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=50, verbose_name='Name of cash register')),
                ('receipt_format', models.CharField(max_length=32, verbose_name='Receipt format', choices=[(b'Page', 'Full page (Letter/A4)'), (b'Thermal', 'Thermal (80mm)')])),
                ('receipt_type', models.CharField(max_length=32, verbose_name='Receipt type', choices=[(b'Print', 'Printed'), (b'E-mail', 'E-mail')])),
                ('print_logo', models.BooleanField(default=True, verbose_name='Print logo on thermal receipts')),
                ('location', models.TextField(max_length=120, null=True, verbose_name='Location of this register', blank=True)),
                ('print_location', models.BooleanField(default=True, verbose_name='Print location of register')),
                ('created_by', models.ForeignKey(related_name=b'pos_billregister_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=100, verbose_name='Category name')),
                ('description', models.TextField(null=True, verbose_name='Description', blank=True)),
                ('color', models.CharField(default=b'ffffff', max_length=6)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=200, verbose_name='Company name')),
                ('street', models.CharField(max_length=200, null=True, verbose_name='Street and house number', blank=True)),
                ('postcode', models.CharField(max_length=20, null=True, verbose_name='Postal code', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name='City', blank=True)),
                ('state', models.CharField(max_length=50, null=True, verbose_name='State', blank=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True, choices=[(b'AF', b'Afghanistan'), (b'AX', b'\xc3\x85land Islands'), (b'AL', b'Albania'), (b'DZ', b'Algeria'), (b'AS', b'American Samoa'), (b'AD', b'Andorra'), (b'AO', b'Angola'), (b'AI', b'Anguilla'), (b'AQ', b'Antarctica'), (b'AG', b'Antigua and Barbuda'), (b'AR', b'Argentina'), (b'AM', b'Armenia'), (b'AW', b'Aruba'), (b'AU', b'Australia'), (b'AT', b'Austria'), (b'AZ', b'Azerbaijan'), (b'BS', b'Bahamas'), (b'BH', b'Bahrain'), (b'BD', b'Bangladesh'), (b'BB', b'Barbados'), (b'BY', b'Belarus'), (b'BE', b'Belgium'), (b'BZ', b'Belize'), (b'BJ', b'Benin'), (b'BM', b'Bermuda'), (b'BT', b'Bhutan'), (b'BO', b'Bolivia, Plurinational State of'), (b'BQ', b'Bonaire, Sint Eustatius and Saba'), (b'BA', b'Bosnia and Herzegovina'), (b'BW', b'Botswana'), (b'BV', b'Bouvet Island'), (b'BR', b'Brazil'), (b'IO', b'British Indian Ocean Territory'), (b'BN', b'Brunei Darussalam'), (b'BG', b'Bulgaria'), (b'BF', b'Burkina Faso'), (b'BI', b'Burundi'), (b'KH', b'Cambodia'), (b'CM', b'Cameroon'), (b'CA', b'Canada'), (b'CV', b'Cape Verde'), (b'KY', b'Cayman Islands'), (b'CF', b'Central African Republic'), (b'TD', b'Chad'), (b'CL', b'Chile'), (b'CN', b'China'), (b'CX', b'Christmas Island'), (b'CC', b'Cocos (Keeling) Islands'), (b'CO', b'Colombia'), (b'KM', b'Comoros'), (b'CG', b'Congo'), (b'CD', b'Congo, the Democratic Republic of the'), (b'CK', b'Cook Islands'), (b'CR', b'Costa Rica'), (b'CI', b"C\xc3\xb4te d'Ivoire"), (b'HR', b'Croatia'), (b'CU', b'Cuba'), (b'CW', b'Cura\xc3\xa7ao'), (b'CY', b'Cyprus'), (b'CZ', b'Czech Republic'), (b'DK', b'Denmark'), (b'DJ', b'Djibouti'), (b'DM', b'Dominica'), (b'DO', b'Dominican Republic'), (b'EC', b'Ecuador'), (b'EG', b'Egypt'), (b'SV', b'El Salvador'), (b'GQ', b'Equatorial Guinea'), (b'ER', b'Eritrea'), (b'EE', b'Estonia'), (b'ET', b'Ethiopia'), (b'FK', b'Falkland Islands (Malvinas)'), (b'FO', b'Faroe Islands'), (b'FJ', b'Fiji'), (b'FI', b'Finland'), (b'FR', b'France'), (b'GF', b'French Guiana'), (b'PF', b'French Polynesia'), (b'TF', b'French Southern Territories'), (b'GA', b'Gabon'), (b'GM', b'Gambia'), (b'GE', b'Georgia'), (b'DE', b'Germany'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GR', b'Greece'), (b'GL', b'Greenland'), (b'GD', b'Grenada'), (b'GP', b'Guadeloupe'), (b'GU', b'Guam'), (b'GT', b'Guatemala'), (b'GG', b'Guernsey'), (b'GN', b'Guinea'), (b'GW', b'Guinea-Bissau'), (b'GY', b'Guyana'), (b'HT', b'Haiti'), (b'HM', b'Heard Island and McDonald Islands'), (b'VA', b'Holy See (Vatican City State)'), (b'HN', b'Honduras'), (b'HK', b'Hong Kong'), (b'HU', b'Hungary'), (b'IS', b'Iceland'), (b'IN', b'India'), (b'ID', b'Indonesia'), (b'IR', b'Iran, Islamic Republic of'), (b'IQ', b'Iraq'), (b'IE', b'Ireland'), (b'IM', b'Isle of Man'), (b'IL', b'Israel'), (b'IT', b'Italy'), (b'JM', b'Jamaica'), (b'JP', b'Japan'), (b'JE', b'Jersey'), (b'JO', b'Jordan'), (b'KZ', b'Kazakhstan'), (b'KE', b'Kenya'), (b'KI', b'Kiribati'), (b'KP', b"Korea, Democratic People's Republic of"), (b'KR', b'Korea, Republic of'), (b'KW', b'Kuwait'), (b'KG', b'Kyrgyzstan'), (b'LA', b"Lao People's Democratic Republic"), (b'LV', b'Latvia'), (b'LB', b'Lebanon'), (b'LS', b'Lesotho'), (b'LR', b'Liberia'), (b'LY', b'Libya'), (b'LI', b'Liechtenstein'), (b'LT', b'Lithuania'), (b'LU', b'Luxembourg'), (b'MO', b'Macao'), (b'MK', b'Macedonia, The Former Yugoslav Republic of'), (b'MG', b'Madagascar'), (b'MW', b'Malawi'), (b'MY', b'Malaysia'), (b'MV', b'Maldives'), (b'ML', b'Mali'), (b'MT', b'Malta'), (b'MH', b'Marshall Islands'), (b'MQ', b'Martinique'), (b'MR', b'Mauritania'), (b'MU', b'Mauritius'), (b'YT', b'Mayotte'), (b'MX', b'Mexico'), (b'FM', b'Micronesia, Federated States of'), (b'MD', b'Moldova, Republic of'), (b'MC', b'Monaco'), (b'MN', b'Mongolia'), (b'ME', b'Montenegro'), (b'MS', b'Montserrat'), (b'MA', b'Morocco'), (b'MZ', b'Mozambique'), (b'MM', b'Myanmar'), (b'NA', b'Namibia'), (b'NR', b'Nauru'), (b'NP', b'Nepal'), (b'NL', b'Netherlands'), (b'NC', b'New Caledonia'), (b'NZ', b'New Zealand'), (b'NI', b'Nicaragua'), (b'NE', b'Niger'), (b'NG', b'Nigeria'), (b'NU', b'Niue'), (b'NF', b'Norfolk Island'), (b'MP', b'Northern Mariana Islands'), (b'NO', b'Norway'), (b'OM', b'Oman'), (b'PK', b'Pakistan'), (b'PW', b'Palau'), (b'PS', b'Palestine, State of'), (b'PA', b'Panama'), (b'PG', b'Papua New Guinea'), (b'PY', b'Paraguay'), (b'PE', b'Peru'), (b'PH', b'Philippines'), (b'PN', b'Pitcairn'), (b'PL', b'Poland'), (b'PT', b'Portugal'), (b'PR', b'Puerto Rico'), (b'QA', b'Qatar'), (b'RE', b'R\xc3\xa9union'), (b'RO', b'Romania'), (b'RU', b'Russian Federation'), (b'RW', b'Rwanda'), (b'BL', b'Saint Barth\xc3\xa9lemy'), (b'SH', b'Saint Helena, Ascension and Tristan da Cunha'), (b'KN', b'Saint Kitts and Nevis'), (b'LC', b'Saint Lucia'), (b'MF', b'Saint Martin (French part)'), (b'PM', b'Saint Pierre and Miquelon'), (b'VC', b'Saint Vincent and the Grenadines'), (b'WS', b'Samoa'), (b'SM', b'San Marino'), (b'ST', b'Sao Tome and Principe'), (b'SA', b'Saudi Arabia'), (b'SN', b'Senegal'), (b'RS', b'Serbia'), (b'SC', b'Seychelles'), (b'SL', b'Sierra Leone'), (b'SG', b'Singapore'), (b'SX', b'Sint Maarten (Dutch part)'), (b'SK', b'Slovakia'), (b'SI', b'Slovenia'), (b'SB', b'Solomon Islands'), (b'SO', b'Somalia'), (b'ZA', b'South Africa'), (b'GS', b'South Georgia and the South Sandwich Islands'), (b'SS', b'South Sudan'), (b'ES', b'Spain'), (b'LK', b'Sri Lanka'), (b'SD', b'Sudan'), (b'SR', b'Suriname'), (b'SJ', b'Svalbard and Jan Mayen'), (b'SZ', b'Swaziland'), (b'SE', b'Sweden'), (b'CH', b'Switzerland'), (b'SY', b'Syrian Arab Republic'), (b'TW', b'Taiwan, Province of China'), (b'TJ', b'Tajikistan'), (b'TZ', b'Tanzania, United Republic of'), (b'TH', b'Thailand'), (b'TL', b'Timor-Leste'), (b'TG', b'Togo'), (b'TK', b'Tokelau'), (b'TO', b'Tonga'), (b'TT', b'Trinidad and Tobago'), (b'TN', b'Tunisia'), (b'TR', b'Turkey'), (b'TM', b'Turkmenistan'), (b'TC', b'Turks and Caicos Islands'), (b'TV', b'Tuvalu'), (b'UG', b'Uganda'), (b'UA', b'Ukraine'), (b'AE', b'United Arab Emirates'), (b'GB', b'United Kingdom'), (b'US', b'United States'), (b'UM', b'United States Minor Outlying Islands'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekistan'), (b'VU', b'Vanuatu'), (b'VE', b'Venezuela, Bolivarian Republic of'), (b'VN', b'Viet Nam'), (b'VG', b'Virgin Islands, British'), (b'VI', b'Virgin Islands, U.S.'), (b'WF', b'Wallis and Futuna'), (b'EH', b'Western Sahara'), (b'YE', b'Yemen'), (b'ZM', b'Zambia'), (b'ZW', b'Zimbabwe')])),
                ('email', models.CharField(max_length=256, verbose_name='E-mail address')),
                ('website', models.CharField(max_length=256, null=True, verbose_name='Website', blank=True)),
                ('phone', models.CharField(max_length=30, null=True, verbose_name='Phone number', blank=True)),
                ('vat_no', models.CharField(max_length=30, verbose_name='VAT exemption number')),
                ('url_name', models.SlugField(verbose_name='Company name, used in URL address')),
                ('color_logo', sorl.thumbnail.fields.ImageField(upload_to=common.functions.ImagePath(b'img/color_logo', b'pos_company', b'color_logo'), null=True, verbose_name='Logo', blank=True)),
                ('monochrome_logo', sorl.thumbnail.fields.ImageField(upload_to=common.functions.ImagePath(b'img/monochrome_logo', b'pos_company', b'monochrome_logo'), null=True, verbose_name='Receipt logo', blank=True)),
                ('notes', models.TextField(null=True, verbose_name='Notes', blank=True)),
                ('created_by', models.ForeignKey(related_name=b'pos_company_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_company_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('type', models.CharField(default=b'Individual', max_length=20, verbose_name='Type of contact', choices=[(b'Individual', 'Individual'), (b'Company', 'Company'), (b'None', 'None')])),
                ('company_name', models.CharField(max_length=50, null=True, verbose_name='Company name', blank=True)),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='First name', blank=True)),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Last name', blank=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True, choices=[(b'M', 'Male'), (b'F', 'Female'), (b'U', 'Undisclosed')])),
                ('date_of_birth', models.DateField(null=True, verbose_name='Date of birth', blank=True)),
                ('street_address', models.CharField(max_length=200, null=True, verbose_name='Street and house number', blank=True)),
                ('postcode', models.CharField(max_length=12, null=True, verbose_name='Post code/ZIP', blank=True)),
                ('city', models.CharField(max_length=50, null=True, verbose_name='City', blank=True)),
                ('state', models.CharField(max_length=50, null=True, verbose_name='State', blank=True)),
                ('country', models.CharField(max_length=2, choices=[(b'AF', b'Afghanistan'), (b'AX', b'\xc3\x85land Islands'), (b'AL', b'Albania'), (b'DZ', b'Algeria'), (b'AS', b'American Samoa'), (b'AD', b'Andorra'), (b'AO', b'Angola'), (b'AI', b'Anguilla'), (b'AQ', b'Antarctica'), (b'AG', b'Antigua and Barbuda'), (b'AR', b'Argentina'), (b'AM', b'Armenia'), (b'AW', b'Aruba'), (b'AU', b'Australia'), (b'AT', b'Austria'), (b'AZ', b'Azerbaijan'), (b'BS', b'Bahamas'), (b'BH', b'Bahrain'), (b'BD', b'Bangladesh'), (b'BB', b'Barbados'), (b'BY', b'Belarus'), (b'BE', b'Belgium'), (b'BZ', b'Belize'), (b'BJ', b'Benin'), (b'BM', b'Bermuda'), (b'BT', b'Bhutan'), (b'BO', b'Bolivia, Plurinational State of'), (b'BQ', b'Bonaire, Sint Eustatius and Saba'), (b'BA', b'Bosnia and Herzegovina'), (b'BW', b'Botswana'), (b'BV', b'Bouvet Island'), (b'BR', b'Brazil'), (b'IO', b'British Indian Ocean Territory'), (b'BN', b'Brunei Darussalam'), (b'BG', b'Bulgaria'), (b'BF', b'Burkina Faso'), (b'BI', b'Burundi'), (b'KH', b'Cambodia'), (b'CM', b'Cameroon'), (b'CA', b'Canada'), (b'CV', b'Cape Verde'), (b'KY', b'Cayman Islands'), (b'CF', b'Central African Republic'), (b'TD', b'Chad'), (b'CL', b'Chile'), (b'CN', b'China'), (b'CX', b'Christmas Island'), (b'CC', b'Cocos (Keeling) Islands'), (b'CO', b'Colombia'), (b'KM', b'Comoros'), (b'CG', b'Congo'), (b'CD', b'Congo, the Democratic Republic of the'), (b'CK', b'Cook Islands'), (b'CR', b'Costa Rica'), (b'CI', b"C\xc3\xb4te d'Ivoire"), (b'HR', b'Croatia'), (b'CU', b'Cuba'), (b'CW', b'Cura\xc3\xa7ao'), (b'CY', b'Cyprus'), (b'CZ', b'Czech Republic'), (b'DK', b'Denmark'), (b'DJ', b'Djibouti'), (b'DM', b'Dominica'), (b'DO', b'Dominican Republic'), (b'EC', b'Ecuador'), (b'EG', b'Egypt'), (b'SV', b'El Salvador'), (b'GQ', b'Equatorial Guinea'), (b'ER', b'Eritrea'), (b'EE', b'Estonia'), (b'ET', b'Ethiopia'), (b'FK', b'Falkland Islands (Malvinas)'), (b'FO', b'Faroe Islands'), (b'FJ', b'Fiji'), (b'FI', b'Finland'), (b'FR', b'France'), (b'GF', b'French Guiana'), (b'PF', b'French Polynesia'), (b'TF', b'French Southern Territories'), (b'GA', b'Gabon'), (b'GM', b'Gambia'), (b'GE', b'Georgia'), (b'DE', b'Germany'), (b'GH', b'Ghana'), (b'GI', b'Gibraltar'), (b'GR', b'Greece'), (b'GL', b'Greenland'), (b'GD', b'Grenada'), (b'GP', b'Guadeloupe'), (b'GU', b'Guam'), (b'GT', b'Guatemala'), (b'GG', b'Guernsey'), (b'GN', b'Guinea'), (b'GW', b'Guinea-Bissau'), (b'GY', b'Guyana'), (b'HT', b'Haiti'), (b'HM', b'Heard Island and McDonald Islands'), (b'VA', b'Holy See (Vatican City State)'), (b'HN', b'Honduras'), (b'HK', b'Hong Kong'), (b'HU', b'Hungary'), (b'IS', b'Iceland'), (b'IN', b'India'), (b'ID', b'Indonesia'), (b'IR', b'Iran, Islamic Republic of'), (b'IQ', b'Iraq'), (b'IE', b'Ireland'), (b'IM', b'Isle of Man'), (b'IL', b'Israel'), (b'IT', b'Italy'), (b'JM', b'Jamaica'), (b'JP', b'Japan'), (b'JE', b'Jersey'), (b'JO', b'Jordan'), (b'KZ', b'Kazakhstan'), (b'KE', b'Kenya'), (b'KI', b'Kiribati'), (b'KP', b"Korea, Democratic People's Republic of"), (b'KR', b'Korea, Republic of'), (b'KW', b'Kuwait'), (b'KG', b'Kyrgyzstan'), (b'LA', b"Lao People's Democratic Republic"), (b'LV', b'Latvia'), (b'LB', b'Lebanon'), (b'LS', b'Lesotho'), (b'LR', b'Liberia'), (b'LY', b'Libya'), (b'LI', b'Liechtenstein'), (b'LT', b'Lithuania'), (b'LU', b'Luxembourg'), (b'MO', b'Macao'), (b'MK', b'Macedonia, The Former Yugoslav Republic of'), (b'MG', b'Madagascar'), (b'MW', b'Malawi'), (b'MY', b'Malaysia'), (b'MV', b'Maldives'), (b'ML', b'Mali'), (b'MT', b'Malta'), (b'MH', b'Marshall Islands'), (b'MQ', b'Martinique'), (b'MR', b'Mauritania'), (b'MU', b'Mauritius'), (b'YT', b'Mayotte'), (b'MX', b'Mexico'), (b'FM', b'Micronesia, Federated States of'), (b'MD', b'Moldova, Republic of'), (b'MC', b'Monaco'), (b'MN', b'Mongolia'), (b'ME', b'Montenegro'), (b'MS', b'Montserrat'), (b'MA', b'Morocco'), (b'MZ', b'Mozambique'), (b'MM', b'Myanmar'), (b'NA', b'Namibia'), (b'NR', b'Nauru'), (b'NP', b'Nepal'), (b'NL', b'Netherlands'), (b'NC', b'New Caledonia'), (b'NZ', b'New Zealand'), (b'NI', b'Nicaragua'), (b'NE', b'Niger'), (b'NG', b'Nigeria'), (b'NU', b'Niue'), (b'NF', b'Norfolk Island'), (b'MP', b'Northern Mariana Islands'), (b'NO', b'Norway'), (b'OM', b'Oman'), (b'PK', b'Pakistan'), (b'PW', b'Palau'), (b'PS', b'Palestine, State of'), (b'PA', b'Panama'), (b'PG', b'Papua New Guinea'), (b'PY', b'Paraguay'), (b'PE', b'Peru'), (b'PH', b'Philippines'), (b'PN', b'Pitcairn'), (b'PL', b'Poland'), (b'PT', b'Portugal'), (b'PR', b'Puerto Rico'), (b'QA', b'Qatar'), (b'RE', b'R\xc3\xa9union'), (b'RO', b'Romania'), (b'RU', b'Russian Federation'), (b'RW', b'Rwanda'), (b'BL', b'Saint Barth\xc3\xa9lemy'), (b'SH', b'Saint Helena, Ascension and Tristan da Cunha'), (b'KN', b'Saint Kitts and Nevis'), (b'LC', b'Saint Lucia'), (b'MF', b'Saint Martin (French part)'), (b'PM', b'Saint Pierre and Miquelon'), (b'VC', b'Saint Vincent and the Grenadines'), (b'WS', b'Samoa'), (b'SM', b'San Marino'), (b'ST', b'Sao Tome and Principe'), (b'SA', b'Saudi Arabia'), (b'SN', b'Senegal'), (b'RS', b'Serbia'), (b'SC', b'Seychelles'), (b'SL', b'Sierra Leone'), (b'SG', b'Singapore'), (b'SX', b'Sint Maarten (Dutch part)'), (b'SK', b'Slovakia'), (b'SI', b'Slovenia'), (b'SB', b'Solomon Islands'), (b'SO', b'Somalia'), (b'ZA', b'South Africa'), (b'GS', b'South Georgia and the South Sandwich Islands'), (b'SS', b'South Sudan'), (b'ES', b'Spain'), (b'LK', b'Sri Lanka'), (b'SD', b'Sudan'), (b'SR', b'Suriname'), (b'SJ', b'Svalbard and Jan Mayen'), (b'SZ', b'Swaziland'), (b'SE', b'Sweden'), (b'CH', b'Switzerland'), (b'SY', b'Syrian Arab Republic'), (b'TW', b'Taiwan, Province of China'), (b'TJ', b'Tajikistan'), (b'TZ', b'Tanzania, United Republic of'), (b'TH', b'Thailand'), (b'TL', b'Timor-Leste'), (b'TG', b'Togo'), (b'TK', b'Tokelau'), (b'TO', b'Tonga'), (b'TT', b'Trinidad and Tobago'), (b'TN', b'Tunisia'), (b'TR', b'Turkey'), (b'TM', b'Turkmenistan'), (b'TC', b'Turks and Caicos Islands'), (b'TV', b'Tuvalu'), (b'UG', b'Uganda'), (b'UA', b'Ukraine'), (b'AE', b'United Arab Emirates'), (b'GB', b'United Kingdom'), (b'US', b'United States'), (b'UM', b'United States Minor Outlying Islands'), (b'UY', b'Uruguay'), (b'UZ', b'Uzbekistan'), (b'VU', b'Vanuatu'), (b'VE', b'Venezuela, Bolivarian Republic of'), (b'VN', b'Viet Nam'), (b'VG', b'Virgin Islands, British'), (b'VI', b'Virgin Islands, U.S.'), (b'WF', b'Wallis and Futuna'), (b'EH', b'Western Sahara'), (b'YE', b'Yemen'), (b'ZM', b'Zambia'), (b'ZW', b'Zimbabwe')])),
                ('email', models.CharField(max_length=255, null=True, verbose_name='E-mail address', blank=True)),
                ('phone', models.CharField(max_length=30, null=True, verbose_name='Telephone number', blank=True)),
                ('vat', models.CharField(max_length=30, null=True, verbose_name='VAT identification number', blank=True)),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_contact_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_contact_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('description', models.TextField(null=True, verbose_name='Discount description', blank=True)),
                ('code', models.CharField(max_length=50, null=True, verbose_name='Code', blank=True)),
                ('type', models.CharField(default=b'Relative', max_length=30, verbose_name='Discount type', choices=[(b'Relative', 'Percentage'), (b'Absolute', 'Absolute value')])),
                ('amount', models.DecimalField(verbose_name='Amount', max_digits=24, decimal_places=8)),
                ('start_date', models.DateField(null=True, verbose_name='Start date', blank=True)),
                ('end_date', models.DateField(null=True, verbose_name='End date', blank=True)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_discount_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_discount_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('permission', models.CharField(max_length=16, choices=[(b'guest', 'Guest'), (b'cashier', 'Cashier'), (b'seller', 'Seller'), (b'manager', 'Manager'), (b'admin', 'Admin')])),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_permission_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_permission_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('unit_price', models.DecimalField(verbose_name='Price per unit, excluding tax', max_digits=24, decimal_places=8)),
                ('created_by', models.ForeignKey(related_name=b'pos_price_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('code', models.CharField(max_length=30, verbose_name='Product code')),
                ('shortcut', models.CharField(max_length=5, null=True, verbose_name="Store's internal product number")),
                ('name', models.CharField(max_length=50, verbose_name='Product name')),
                ('description', models.TextField(null=True, verbose_name='Product description', blank=True)),
                ('private_notes', models.TextField(null=True, verbose_name='Notes (only for internal use)', blank=True)),
                ('unit_type', models.CharField(default=b'Piece', max_length=15, verbose_name='Product unit type', choices=[(b'Piece', 'Piece'), (b'g', b'g'), (b'dag', b'dag'), (b'kg', b'kg'), (b't', b'ton'), (b'oz', b'oz'), (b'lb', b'lb'), (b'cm', b'cm'), (b'm', b'm'), (b'in', b'in'), (b'ft', b'ft'), (b'yd', b'yd'), (b'in^2', b'in\xc2\xb2'), (b'm^2', b'm\xc2\xb2'), (b'ft^2', b'ft\xc2\xb2'), (b'l', b'l'), (b'dl', b'dl'), (b'cl', b'cl'), (b'm^3', b'm\xc2\xb3'), (b'fl. oz.', b'fl. oz.'), (b'pint', b'pint'), (b'gal', b'gal'), (b'ft^3', b'ft\xc2\xb3'), (b'h', 'Hour'), (b'other', 'Other')])),
                ('stock', models.DecimalField(verbose_name='Number of items left in stock', max_digits=24, decimal_places=8)),
                ('image', sorl.thumbnail.fields.ImageField(upload_to=common.functions.ImagePath(b'img/product', b'pos_product'), null=True, verbose_name='Icon', blank=True)),
                ('favorite', models.BooleanField(default=False)),
                ('category', models.ForeignKey(blank=True, to='pos.Category', null=True)),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_product_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProductDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('seq_no', models.IntegerField(verbose_name='Order of discount on a product')),
                ('created_by', models.ForeignKey(related_name=b'pos_productdiscount_created_by', to=settings.AUTH_USER_MODEL)),
                ('discount', models.ForeignKey(to='pos.Discount')),
                ('product', models.ForeignKey(to='pos.Product')),
                ('updated_by', models.ForeignKey(related_name=b'pos_productdiscount_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['seq_no'],
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PurchasePrice',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('unit_price', models.DecimalField(verbose_name='Purchase price per unit, excluding tax', max_digits=24, decimal_places=8)),
                ('created_by', models.ForeignKey(related_name=b'pos_purchaseprice_created_by', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(to='pos.Product')),
                ('updated_by', models.ForeignKey(related_name=b'pos_purchaseprice_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=50, verbose_name='Name of cash register')),
                ('receipt_format', models.CharField(max_length=32, verbose_name='Receipt format', choices=[(b'Page', 'Full page (Letter/A4)'), (b'Thermal', 'Thermal (80mm)')])),
                ('receipt_type', models.CharField(max_length=32, verbose_name='Receipt type', choices=[(b'Print', 'Printed'), (b'E-mail', 'E-mail')])),
                ('print_logo', models.BooleanField(default=True, verbose_name='Print logo on thermal receipts')),
                ('location', models.TextField(max_length=120, null=True, verbose_name='Location of this register', blank=True)),
                ('print_location', models.BooleanField(default=True, verbose_name='Print location of register')),
                ('printer_driver', models.CharField(max_length=50, verbose_name='Printer driver', choices=[(b'System', 'Default system printer'), (b'Sellout', 'Sellout serial (must be installed)')])),
                ('device_id', models.CharField(max_length=128, null=True, verbose_name='Device id', blank=True)),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_register_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_register_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, editable=False, blank=True)),
                ('datetime_updated', models.DateTimeField(default=django.utils.timezone.now, null=True, editable=False, blank=True)),
                ('amount', models.DecimalField(verbose_name='Tax amount', max_digits=11, decimal_places=8)),
                ('name', models.CharField(max_length=15, null=True, verbose_name='Name', blank=True)),
                ('default', models.BooleanField(default=False, verbose_name='Use by default when creating new products')),
                ('company', models.ForeignKey(to='pos.Company')),
                ('created_by', models.ForeignKey(related_name=b'pos_tax_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(related_name=b'pos_tax_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Taxes',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='register',
            unique_together=set([('company', 'device_id')]),
        ),
        migrations.AddField(
            model_name='product',
            name='discounts',
            field=models.ManyToManyField(to='pos.Discount', null=True, through='pos.ProductDiscount', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='product',
            name='tax',
            field=models.ForeignKey(to='pos.Tax'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_product_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='price',
            name='product',
            field=models.ForeignKey(to='pos.Product'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='price',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_price_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='discount',
            unique_together=set([('company', 'code')]),
        ),
        migrations.AddField(
            model_name='category',
            name='company',
            field=models.ForeignKey(to='pos.Company'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(related_name=b'pos_category_created_by', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, to='pos.Category', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='category',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_category_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billregister',
            name='register',
            field=models.ForeignKey(to='pos.Register'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billregister',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_billregister_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcontact',
            name='contact',
            field=models.ForeignKey(to='pos.Contact'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcontact',
            name='created_by',
            field=models.ForeignKey(related_name=b'pos_billcontact_created_by', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcontact',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_billcontact_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcompany',
            name='company',
            field=models.ForeignKey(to='pos.Company'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcompany',
            name='created_by',
            field=models.ForeignKey(related_name=b'pos_billcompany_created_by', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='billcompany',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_billcompany_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='company',
            field=models.ForeignKey(to='pos.Company'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='contact',
            field=models.ForeignKey(to='pos.BillContact', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='created_by',
            field=models.ForeignKey(related_name=b'pos_bill_created_by', to=settings.AUTH_USER_MODEL),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='issuer',
            field=models.ForeignKey(to='pos.BillCompany'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='register',
            field=models.ForeignKey(to='pos.BillRegister'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='bill',
            name='updated_by',
            field=models.ForeignKey(related_name=b'pos_bill_updated_by', blank=True, to=settings.AUTH_USER_MODEL, null=True),
            preserve_default=True,
        ),
    ]
