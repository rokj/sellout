OPERATE WITH:
 - keyboard:
   1. focus shop code (tab: focus shop code)
   2. type code > press enter
   3. show matching products:
     - if more than one: choose with arrow keys, then > press enter
     - if one: goto 4.
   4. add product to bill
   5. focus quantity, default = 1
   6. type quantity > press enter
   7. clear code/shop code
   8. goto 1.
   
   ideal scenario:
     AN<enter>2<enter> (shop code, quantity) 3-4 keys
   worst-case scenario:
     129380-210-<enter><arrow arrow>
     
 - touch screen/mouse:
 
KEY BINDINGS
 - left, right: select neighbor items
 - up:
   - focus on category selector: go to parent category
   - focus on product selector: select product above (or jump to bottom)
 - down:
   - focus on category selector: 
     - select the first child of current category, or (if category has no more children)
     - list the products and 
   - focus on product selector: select product below (or jump to top)
   
BILL CREATION & ITEMS:
 - on terminal open: check if there's an active bill that has not been saved
   - if there's no bill:
       - create a new bill with no items and save it to db
       - mark it as 'new' (dictionary['new'] = True) so that JS knows that
   - if there is a bill:
       - send it along with all items on it to client
       - on client, alert the user that it's an old, unsaved bill in which
         the last item may not be present or its data may be wrong
 - searching for product:
   - with category selection:
     - locate category
     - show products from that category
   - with search:
     - type in and show search matches on click of 'search' button or after <n> seconds
 - on click of product button:
   - add a new item to bill
   - calculate tax, discount, single total and total
 
 - updating bill items:
   1. user edits item #1 (quantity, discounts, ...)
      last_item = #1
   2. user stops editing item #1 and starts to edit item #2
      if last_item != #this: send currently_editing to server
   3. item #1 is sent to server
      
